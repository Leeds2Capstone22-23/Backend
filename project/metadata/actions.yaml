actions:
  - name: nlp_finished_job
    definition:
      kind: ""
      handler: http://{{HASURA_NLP_URL}}
      headers:
        - name: Authorization
          value_from_env: HASURA_NLP_TOKEN
      request_transform:
        method: GET
        query_params: {}
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/search/reddit/v1/finished/{{$body.input.job_name}}'
        version: 2
      response_transform:
        body:
          action: transform
          template: |-
            {
              "response": {{$body}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: user
  - name: nlp_hello_world
    definition:
      kind: ""
      handler: http://{{HASURA_NLP_URL}}
      forward_client_headers: true
      headers:
        - name: Authorization
          value_from_env: HASURA_NLP_TOKEN
      request_transform:
        method: GET
        query_params: {}
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/search/hw/v1/'
        version: 2
  - name: nlp_job_status
    definition:
      kind: ""
      handler: http://{{HASURA_NLP_URL}}
      headers:
        - name: Authorization
          value_from_env: HASURA_NLP_TOKEN
      request_transform:
        body:
          action: transform
          template: |-
            {
              "job_name": "{{$body.input.job_name}}"
            }
        method: GET
        query_params: {}
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/search/reddit/v1/status/{{$body.input.job_name}}'
        version: 2
    permissions:
      - role: user
  - name: nlp_login
    definition:
      kind: ""
      handler: http://{{HASURA_NLP_URL}}
      request_transform:
        body:
          action: transform
          template: |-
            {
              "username": "{{$body.input.username}}",
              "password": "{{$body.input.password}}"
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/auth/token/login/'
        version: 2
  - name: nlp_search
    definition:
      kind: ""
      handler: http://{{HASURA_NLP_URL}}
      headers:
        - name: Authorization
          value_from_env: HASURA_NLP_TOKEN
      request_transform:
        body:
          action: transform
          template: |-
            {
              "search_string": "{{$body.input.search_string}}",
              "subreddits": "{{$body.input.subreddits}}",
              "filter_keywords": "{{$body.input.filter_keywords}}",
              "description": "{{$body.input.description}}"
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/search/reddit/v1/'
        version: 2
    permissions:
      - role: user
  - name: register_new_user
    definition:
      kind: synchronous
      handler: '{{HASURA_GRAPHQL_AUTH_HOOK}}/register'
    permissions:
      - role: public
custom_types:
  enums: []
  input_objects: []
  objects:
    - name: RegisterUserOutput
    - name: NlpHelloWorldOutput
    - name: NlpLoginOutput
    - name: NlpSearchOutput
    - name: NlpJobStatusOutput
    - name: NlpFinishedJobsOutput
    - name: NlpFinishedJobOutput
  scalars: []
